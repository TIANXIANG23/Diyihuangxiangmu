package com.example.tianxiang.diyihuangxiangmu.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.tianxiang.diyihuangxiangmu.data.remote.Channel;
import com.example.tianxiang.diyihuangxiangmu.data.remote.News;
import com.example.tianxiang.diyihuangxiangmu.data.remote.User;

import com.example.tianxiang.diyihuangxiangmu.greendao.ChannelDao;
import com.example.tianxiang.diyihuangxiangmu.greendao.NewsDao;
import com.example.tianxiang.diyihuangxiangmu.greendao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig channelDaoConfig;
    private final DaoConfig newsDaoConfig;
    private final DaoConfig userDaoConfig;

    private final ChannelDao channelDao;
    private final NewsDao newsDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        channelDaoConfig = daoConfigMap.get(ChannelDao.class).clone();
        channelDaoConfig.initIdentityScope(type);

        newsDaoConfig = daoConfigMap.get(NewsDao.class).clone();
        newsDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        channelDao = new ChannelDao(channelDaoConfig, this);
        newsDao = new NewsDao(newsDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Channel.class, channelDao);
        registerDao(News.class, newsDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        channelDaoConfig.getIdentityScope().clear();
        newsDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
    }

    public ChannelDao getChannelDao() {
        return channelDao;
    }

    public NewsDao getNewsDao() {
        return newsDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
